% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/localOutliers.R
\name{localOutliers}
\alias{localOutliers}
\title{localOutliers Function}
\usage{
localOutliers(
  spe,
  n_neighbors = 36,
  features = c("sum_umi", "sum_gene", "expr_chrM_ratio"),
  method = "multivariate",
  samples = "sample_id",
  log2 = TRUE,
  cutoff = 2.58,
  scale = TRUE,
  minPts = 20,
  data_output = FALSE,
  n_cores = 1
)
}
\arguments{
\item{spe}{SpatialExperiment object with the following columns in colData: sample_id, sum_umi, sum_gene}

\item{n_neighbors}{Number of nearest neighbors to use for outlier detection}

\item{features}{Vector of features to use for outlier detection}

\item{method}{Method to use for outlier detection (univariate or multivariate)}

\item{samples}{Column name in colData to use for sample IDs}

\item{log2}{Logical indicating whether to log2 transform the features}

\item{cutoff}{Cutoff for outlier detection}

\item{scale}{Logical indicating whether to scale the features for LOF calculation (recommended)}

\item{minPts}{Minimum number of points (nearest neighbors) to use for LOF calculation}

\item{data_output}{Logical indicating whether to output the z-scores for each feature}

\item{n_cores}{Number of cores to use for parallelization in the findKNN function}
}
\value{
SpatialExperiment object with updated colData
}
\description{
This function detects local outliers based on k-nearest neighbors based on either a univariate
(z-score thresholds per QC metrics) or multivariate approach (Local Outlier Factor).
}
\examples{
library(SpotSweeper)
library(SpatialExperiment)

# load example data
spe <- STexampleData::Visium_humanDLPFC()

# change from gene id to gene names
rownames(spe) <- rowData(spe)$gene_name

# show column data before SpotSweepR
colnames(colData(spe))

# drop out-of-tissue spots
spe <- spe[, spe$in_tissue == 1]
spe <- spe[, !is.na(spe$ground_truth)]

# Identifying the mitochondrial transcripts in our SpatialExperiment.
is.mito <- rownames(spe)[grepl("^MT-", rownames(spe))]

# Calculating QC metrics for each spot using scuttle
spe<- scuttle::addPerCellQCMetrics(spe, subsets=list(Mito=is.mito))
colnames(colData(spe))


features <- c('sum' ,'detected', "subsets_Mito_percent")
spe<- localOutliers(spe,
                    features=features,
                    n_neighbors=36,
                    data_output=TRUE,
                    method="multivariate"
                    )
}
